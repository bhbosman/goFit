#include "fitTypeDecls.idl"
#include "fitAllTypes.idl"

struct<"Record", ""> Record {
	uint32<"Uint32", 253, -1, "", 1, 1, "s", "", "", "", "", "", "", "1"> @Timestamp;
	int32<"Sint32", 0, -1, "", 1, 1, "semicircles", "", "", "", "", "", "", "1"> @PositionLat;
	int32<"Sint32", 1, -1, "", 1, 1, "semicircles", "", "", "", "", "", "", "1"> @PositionLong;
	uint16<"Uint16", 2, -1, "enhanced_altitude", 5, 500, "m", "16", "", "", "", "", "", "1"> @Altitude;
	uint8<"Uint8", 3, -1, "", 1, 1, "bpm", "", "", "", "", "", "", "1"> @HeartRate;
	uint8<"Uint8", 4, -1, "", 1, 1, "rpm", "", "", "", "", "", "", "1"> @Cadence;
	uint32<"Uint32", 5, -1, "", 100, 1, "m", "", "", "", "", "", "", "1"> @Distance;
	uint16<"Uint16", 6, -1, "enhanced_speed", 1000, 1, "m/s", "16", "", "", "", "", "", "1"> @Speed;
	uint16<"Uint16", 7, -1, "", 1, 1, "watts", "", "", "", "", "", "", "1"> @Power;
	byte<"Byte", 8, 0, "speed,distance", 0, 1, "m/s,m", "12,12", "0,1", "", "", "", "", "1"> @CompressedSpeedDistance;
	int16<"Sint16", 9, -1, "", 100, 1, "%", "", "", "", "", "", "", "1"> @Grade;
	uint8<"Uint8", 10, -1, "", 1, 1, "", "", "", "", "", "Relative. 0 is none 254 is Max.", "", "1"> @Resistance;
	int32<"Sint32", 11, -1, "", 1000, 1, "s", "", "", "", "", "", "", "1"> @TimeFromCourse;
	uint8<"Uint8", 12, -1, "", 100, 1, "m", "", "", "", "", "", "", "1"> @CycleLength;
	int8<"Sint8", 13, -1, "", 1, 1, "C", "", "", "", "", "", "", "1"> @Temperature;
	uint8<"Uint8", 17, 0, "", 16, 1, "m/s", "", "", "", "", "Speed at 1s intervals. Timestamp field indicates time of last array element.", "", "5"> @Speed1s;
	uint8<"Uint8", 18, -1, "total_cycles", 1, 1, "cycles", "8", "1", "", "", "", "", "1"> @Cycles;
	uint32<"Uint32", 19, -1, "", 1, 1, "cycles", "", "", "", "", "", "", "1"> @TotalCycles;
	uint16<"Uint16", 28, -1, "accumulated_power", 1, 1, "watts", "16", "1", "", "", "", "", "1"> @CompressedAccumulatedPower;
	uint32<"Uint32", 29, -1, "", 1, 1, "watts", "", "", "", "", "", "", "1"> @AccumulatedPower;
	LeftRightBalance<"Enum", 30, -1, "", 1, 1, "", "", "", "", "", "", "", "1"> @LeftRightBalance;
	uint8<"Uint8", 31, -1, "", 1, 1, "m", "", "", "", "", "", "", "1"> @GpsAccuracy;
	int16<"Sint16", 32, -1, "", 1000, 1, "m/s", "", "", "", "", "", "", "1"> @VerticalSpeed;
	uint16<"Uint16", 33, -1, "", 1, 1, "kcal", "", "", "", "", "", "", "1"> @Calories;
	uint16<"Uint16", 39, -1, "", 10, 1, "mm", "", "", "", "", "", "", "1"> @VerticalOscillation;
	uint16<"Uint16", 40, -1, "", 100, 1, "percent", "", "", "", "", "", "", "1"> @StanceTimePercent;
	uint16<"Uint16", 41, -1, "", 10, 1, "ms", "", "", "", "", "", "", "1"> @StanceTime;
	ActivityType<"Enum", 42, -1, "", 1, 1, "", "", "", "", "", "", "", "1"> @ActivityType;
	uint8<"Uint8", 43, -1, "", 2, 1, "percent", "", "", "", "", "", "", "1"> @LeftTorqueEffectiveness;
	uint8<"Uint8", 44, -1, "", 2, 1, "percent", "", "", "", "", "", "", "1"> @RightTorqueEffectiveness;
	uint8<"Uint8", 45, -1, "", 2, 1, "percent", "", "", "", "", "", "", "1"> @LeftPedalSmoothness;
	uint8<"Uint8", 46, -1, "", 2, 1, "percent", "", "", "", "", "", "", "1"> @RightPedalSmoothness;
	uint8<"Uint8", 47, -1, "", 2, 1, "percent", "", "", "", "", "", "", "1"> @CombinedPedalSmoothness;
	uint8<"Uint8", 48, -1, "", 128, 1, "s", "", "", "", "", "", "", "1"> @Time128;
	StrokeType<"Enum", 49, -1, "", 1, 1, "", "", "", "", "", "", "", "1"> @StrokeType;
	uint8<"Uint8", 50, -1, "", 1, 1, "", "", "", "", "", "", "", "1"> @Zone;
	uint16<"Uint16", 51, -1, "", 100, 1, "m/s", "", "", "", "", "", "", "1"> @BallSpeed;
	uint16<"Uint16", 52, -1, "", 256, 1, "rpm", "", "", "", "", "Log cadence and fractional cadence for backwards compatability", "", "1"> @Cadence256;
	uint8<"Uint8", 53, -1, "", 128, 1, "rpm", "", "", "", "", "", "", "1"> @FractionalCadence;
	uint16<"Uint16", 54, -1, "", 100, 1, "g/dL", "", "", "", "", "Total saturated and unsaturated hemoglobin", "", "1"> @TotalHemoglobinConc;
	uint16<"Uint16", 55, -1, "", 100, 1, "g/dL", "", "", "", "", "Min saturated and unsaturated hemoglobin", "", "1"> @TotalHemoglobinConcMin;
	uint16<"Uint16", 56, -1, "", 100, 1, "g/dL", "", "", "", "", "Max saturated and unsaturated hemoglobin", "", "1"> @TotalHemoglobinConcMax;
	uint16<"Uint16", 57, -1, "", 10, 1, "%", "", "", "", "", "Percentage of hemoglobin saturated with oxygen", "", "1"> @SaturatedHemoglobinPercent;
	uint16<"Uint16", 58, -1, "", 10, 1, "%", "", "", "", "", "Min percentage of hemoglobin saturated with oxygen", "", "1"> @SaturatedHemoglobinPercentMin;
	uint16<"Uint16", 59, -1, "", 10, 1, "%", "", "", "", "", "Max percentage of hemoglobin saturated with oxygen", "", "1"> @SaturatedHemoglobinPercentMax;
	DeviceIndex<"Enum", 62, -1, "", 1, 1, "", "", "", "", "", "", "", "1"> @DeviceIndex;
	int8<"Sint8", 67, -1, "", 1, 1, "mm", "", "", "", "", "Left platform center offset", "", ""> @LeftPco;
	int8<"Sint8", 68, -1, "", 1, 1, "mm", "", "", "", "", "Right platform center offset", "", ""> @RightPco;
	uint8<"Uint8", 69, 0, "", 0.7111111, 1, "degrees", "", "", "", "", "Left power phase angles. Data value indexes defined by power_phase_type.", "", ""> @LeftPowerPhase;
	uint8<"Uint8", 70, 0, "", 0.7111111, 1, "degrees", "", "", "", "", "Left power phase peak angles. Data value indexes defined by power_phase_type.", "", ""> @LeftPowerPhasePeak;
	uint8<"Uint8", 71, 0, "", 0.7111111, 1, "degrees", "", "", "", "", "Right power phase angles. Data value indexes defined by power_phase_type.", "", ""> @RightPowerPhase;
	uint8<"Uint8", 72, 0, "", 0.7111111, 1, "degrees", "", "", "", "", "Right power phase peak angles. Data value indexes defined by power_phase_type.", "", ""> @RightPowerPhasePeak;
	uint32<"Uint32", 73, -1, "", 1000, 1, "m/s", "", "", "", "", "", "", "1"> @EnhancedSpeed;
	uint32<"Uint32", 78, -1, "", 5, 500, "m", "", "", "", "", "", "", "1"> @EnhancedAltitude;
	uint8<"Uint8", 81, -1, "", 2, 1, "percent", "", "", "", "", "lev battery state of charge", "", ""> @BatterySoc;
	uint16<"Uint16", 82, -1, "", 1, 1, "watts", "", "", "", "", "lev motor power", "", ""> @MotorPower;
	uint16<"Uint16", 83, -1, "", 100, 1, "percent", "", "", "", "", "", "", ""> @VerticalRatio;
	uint16<"Uint16", 84, -1, "", 100, 1, "percent", "", "", "", "", "", "", ""> @StanceTimeBalance;
	uint16<"Uint16", 85, -1, "", 10, 1, "mm", "", "", "", "", "", "", ""> @StepLength;
	uint16<"Uint16", 87, -1, "", 100, 1, "m", "", "", "", "", "Supports larger cycle sizes needed for paddlesports. Max cycle size: 655.35", "", ""> @CycleLength16;
	uint32<"Uint32", 91, -1, "", 1, 1, "Pa", "", "", "", "", "Includes atmospheric pressure", "", ""> @AbsolutePressure;
	uint32<"Uint32", 92, -1, "", 1000, 1, "m", "", "", "", "", "0 if above water", "", ""> @Depth;
	uint32<"Uint32", 93, -1, "", 1000, 1, "m", "", "", "", "", "0 if above water", "", ""> @NextStopDepth;
	uint32<"Uint32", 94, -1, "", 1, 1, "s", "", "", "", "", "", "", ""> @NextStopTime;
	uint32<"Uint32", 95, -1, "", 1, 1, "s", "", "", "", "", "", "", ""> @TimeToSurface;
	uint32<"Uint32", 96, -1, "", 1, 1, "s", "", "", "", "", "", "", ""> @NdlTime;
	uint8<"Uint8", 97, -1, "", 1, 1, "percent", "", "", "", "", "", "", ""> @CnsLoad;
	uint16<"Uint16", 98, -1, "", 1, 1, "percent", "", "", "", "", "", "", ""> @N2Load;
	uint8<"Uint8", 99, -1, "enhanced_respiration_rate", 1, 1, "s", "8", "", "", "", "", "", ""> @RespirationRate;
	uint16<"Uint16", 108, -1, "", 100, 1, "Breaths/min", "", "", "", "", "", "", ""> @EnhancedRespirationRate;
	float32<"Float32", 114, -1, "", 1, 1, "", "", "", "", "", "The grit score estimates how challenging a route could be for a cyclist in terms of time spent going over sharp turns or large grade slopes.", "", ""> @Grit;
	float32<"Float32", 115, -1, "", 1, 1, "", "", "", "", "", "The flow score estimates how long distance wise a cyclist deaccelerates over intervals where deacceleration is unnecessary such as smooth turns or small grade angle intervals.", "", ""> @Flow;
	uint16<"Uint16", 116, -1, "", 100, 1, "", "", "", "", "", "Current Stress value", "", ""> @CurrentStress;
	uint16<"Uint16", 117, -1, "", 1, 1, "km", "", "", "", "", "", "", ""> @EbikeTravelRange;
	uint8<"Uint8", 118, -1, "", 1, 1, "percent", "", "", "", "", "", "", ""> @EbikeBatteryLevel;
	uint8<"Uint8", 119, -1, "", 1, 1, "depends on sensor", "", "", "", "", "", "", ""> @EbikeAssistMode;
	uint8<"Uint8", 120, -1, "", 1, 1, "percent", "", "", "", "", "", "", ""> @EbikeAssistLevelPercent;
	uint32<"Uint32", 123, -1, "", 1, 1, "s", "", "", "", "", "", "", ""> @AirTimeRemaining;
	uint16<"Uint16", 124, -1, "", 100, 1, "bar/min", "", "", "", "", "Pressure-based surface air consumption", "", ""> @PressureSac;
	uint16<"Uint16", 125, -1, "", 100, 1, "L/min", "", "", "", "", "Volumetric surface air consumption", "", ""> @VolumeSac;
	uint16<"Uint16", 126, -1, "", 100, 1, "L/min", "", "", "", "", "Respiratory minute volume", "", ""> @Rmv;
	int32<"Sint32", 127, -1, "", 1000, 1, "m/s", "", "", "", "", "", "", ""> @AscentRate;
	uint8<"Uint8", 129, -1, "", 100, 1, "percent", "", "", "", "", "Current partial pressure of oxygen", "", ""> @Po2;
	uint16<"Uint16", 139, -1, "", 100, 1, "C", "", "", "", "", "", "", ""> @CoreTemperature;
};
