#include "fitTypeDecls.idl"
#include "fitAllTypes.idl"

struct<"Session", ""> Session {
	MessageIndex<"Enum", 254, -1, "", 1, 1, "", "", "", "", "", "Selected bit is set for the current session.", "", "1"> @MessageIndex;
	uint32<"Uint32", 253, -1, "", 1, 1, "s", "", "", "", "", "Sesson end time.", "", "1"> @Timestamp;
	Event<"Enum", 0, -1, "", 1, 1, "", "", "", "", "", "session", "", "1"> @Event;
	EventType<"Enum", 1, -1, "", 1, 1, "", "", "", "", "", "stop", "", "1"> @EventType;
	uint32<"Uint32", 2, -1, "", 1, 1, "", "", "", "", "", "", "", "1"> @StartTime;
	int32<"Sint32", 3, -1, "", 1, 1, "semicircles", "", "", "", "", "", "", "1"> @StartPositionLat;
	int32<"Sint32", 4, -1, "", 1, 1, "semicircles", "", "", "", "", "", "", "1"> @StartPositionLong;
	Sport<"Enum", 5, -1, "", 1, 1, "", "", "", "", "", "", "", "1"> @Sport;
	SubSport<"Enum", 6, -1, "", 1, 1, "", "", "", "", "", "", "", "1"> @SubSport;
	uint32<"Uint32", 7, -1, "", 1000, 1, "s", "", "", "", "", "Time (includes pauses)", "", "1"> @TotalElapsedTime;
	uint32<"Uint32", 8, -1, "", 1000, 1, "s", "", "", "", "", "Timer Time (excludes pauses)", "", "1"> @TotalTimerTime;
	uint32<"Uint32", 9, -1, "", 100, 1, "m", "", "", "", "", "", "", "1"> @TotalDistance;
	uint32<"Uint32", 10, -1, "", 1, 1, "cycles", "", "", "", "", "", "", "1"> @TotalCycles
	{
		uint32<"Uint32", "", 1, 1, "strides", "", "", "sport,sport", "running,walking", "", "", "1"> @TotalStrides;
		uint32<"Uint32", "", 1, 1, "strokes", "", "", "sport,sport,sport,sport", "cycling,swimming,rowing,stand_up_paddleboarding", "", "", "1"> @TotalStrokes;
	};
	uint16<"Uint16", 11, -1, "", 1, 1, "kcal", "", "", "", "", "", "", "1"> @TotalCalories;
	uint16<"Uint16", 13, -1, "", 1, 1, "kcal", "", "", "", "", "", "", "1"> @TotalFatCalories;
	uint16<"Uint16", 14, -1, "enhanced_avg_speed", 1000, 1, "m/s", "16", "", "", "", "total_distance / total_timer_time", "", "1"> @AvgSpeed;
	uint16<"Uint16", 15, -1, "enhanced_max_speed", 1000, 1, "m/s", "16", "", "", "", "", "", "1"> @MaxSpeed;
	uint8<"Uint8", 16, -1, "", 1, 1, "bpm", "", "", "", "", "average heart rate (excludes pause time)", "", "1"> @AvgHeartRate;
	uint8<"Uint8", 17, -1, "", 1, 1, "bpm", "", "", "", "", "", "", "1"> @MaxHeartRate;
	uint8<"Uint8", 18, -1, "", 1, 1, "rpm", "", "", "", "", "total_cycles / total_timer_time if non_zero_avg_cadence otherwise total_cycles / total_elapsed_time", "", "1"> @AvgCadence
	{
		uint8<"Uint8", "", 1, 1, "strides/min", "", "", "sport", "running", "", "", "1"> @AvgRunningCadence;
	};
	uint8<"Uint8", 19, -1, "", 1, 1, "rpm", "", "", "", "", "", "", "1"> @MaxCadence
	{
		uint8<"Uint8", "", 1, 1, "strides/min", "", "", "sport", "running", "", "", "1"> @MaxRunningCadence;
	};
	uint16<"Uint16", 20, -1, "", 1, 1, "watts", "", "", "", "", "total_power / total_timer_time if non_zero_avg_power otherwise total_power / total_elapsed_time", "", "1"> @AvgPower;
	uint16<"Uint16", 21, -1, "", 1, 1, "watts", "", "", "", "", "", "", "1"> @MaxPower;
	uint16<"Uint16", 22, -1, "", 1, 1, "m", "", "", "", "", "", "", "1"> @TotalAscent;
	uint16<"Uint16", 23, -1, "", 1, 1, "m", "", "", "", "", "", "", "1"> @TotalDescent;
	uint8<"Uint8", 24, -1, "", 10, 1, "", "", "", "", "", "", "", "1"> @TotalTrainingEffect;
	uint16<"Uint16", 25, -1, "", 1, 1, "", "", "", "", "", "", "", "1"> @FirstLapIndex;
	uint16<"Uint16", 26, -1, "", 1, 1, "", "", "", "", "", "", "", "1"> @NumLaps;
	uint8<"Uint8", 27, -1, "", 1, 1, "", "", "", "", "", "", "", "1"> @EventGroup;
	SessionTrigger<"Enum", 28, -1, "", 1, 1, "", "", "", "", "", "", "", "1"> @Trigger;
	int32<"Sint32", 29, -1, "", 1, 1, "semicircles", "", "", "", "", "North east corner latitude", "", "1"> @NecLat;
	int32<"Sint32", 30, -1, "", 1, 1, "semicircles", "", "", "", "", "North east corner longitude", "", "1"> @NecLong;
	int32<"Sint32", 31, -1, "", 1, 1, "semicircles", "", "", "", "", "South west corner latitude", "", "1"> @SwcLat;
	int32<"Sint32", 32, -1, "", 1, 1, "semicircles", "", "", "", "", "South west corner longitude", "", "1"> @SwcLong;
	uint16<"Uint16", 33, -1, "", 1, 1, "lengths", "", "", "", "", "# of lengths of swim pool", "", "1"> @NumLengths;
	uint16<"Uint16", 34, -1, "", 1, 1, "watts", "", "", "", "", "", "", "1"> @NormalizedPower;
	uint16<"Uint16", 35, -1, "", 10, 1, "tss", "", "", "", "", "", "", "1"> @TrainingStressScore;
	uint16<"Uint16", 36, -1, "", 1000, 1, "if", "", "", "", "", "", "", "1"> @IntensityFactor;
	LeftRightBalance100<"Enum", 37, -1, "", 1, 1, "", "", "", "", "", "", "", "1"> @LeftRightBalance;
	int32<"Sint32", 38, -1, "", 1, 1, "semicircles", "", "", "", "", "", "", "1"> @EndPositionLat;
	int32<"Sint32", 39, -1, "", 1, 1, "semicircles", "", "", "", "", "", "", "1"> @EndPositionLong;
	uint32<"Uint32", 41, -1, "", 10, 1, "strokes/lap", "", "", "", "", "", "", "1"> @AvgStrokeCount;
	uint16<"Uint16", 42, -1, "", 100, 1, "m", "", "", "", "", "", "", "1"> @AvgStrokeDistance;
	SwimStroke<"Enum", 43, -1, "", 1, 1, "swim_stroke", "", "", "", "", "", "", "1"> @SwimStroke;
	uint16<"Uint16", 44, -1, "", 100, 1, "m", "", "", "", "", "", "", "1"> @PoolLength;
	uint16<"Uint16", 45, -1, "", 1, 1, "watts", "", "", "", "", "", "", "1"> @ThresholdPower;
	DisplayMeasure<"Enum", 46, -1, "", 1, 1, "", "", "", "", "", "", "", "1"> @PoolLengthUnit;
	uint16<"Uint16", 47, -1, "", 1, 1, "lengths", "", "", "", "", "# of active lengths of swim pool", "", "1"> @NumActiveLengths;
	uint32<"Uint32", 48, -1, "", 1, 1, "J", "", "", "", "", "", "", "1"> @TotalWork;
	uint16<"Uint16", 49, -1, "enhanced_avg_altitude", 5, 500, "m", "16", "", "", "", "", "", "1"> @AvgAltitude;
	uint16<"Uint16", 50, -1, "enhanced_max_altitude", 5, 500, "m", "16", "", "", "", "", "", "1"> @MaxAltitude;
	uint8<"Uint8", 51, -1, "", 1, 1, "m", "", "", "", "", "", "", "1"> @GpsAccuracy;
	int16<"Sint16", 52, -1, "", 100, 1, "%", "", "", "", "", "", "", "1"> @AvgGrade;
	int16<"Sint16", 53, -1, "", 100, 1, "%", "", "", "", "", "", "", "1"> @AvgPosGrade;
	int16<"Sint16", 54, -1, "", 100, 1, "%", "", "", "", "", "", "", "1"> @AvgNegGrade;
	int16<"Sint16", 55, -1, "", 100, 1, "%", "", "", "", "", "", "", "1"> @MaxPosGrade;
	int16<"Sint16", 56, -1, "", 100, 1, "%", "", "", "", "", "", "", "1"> @MaxNegGrade;
	int8<"Sint8", 57, -1, "", 1, 1, "C", "", "", "", "", "", "", "1"> @AvgTemperature;
	int8<"Sint8", 58, -1, "", 1, 1, "C", "", "", "", "", "", "", "1"> @MaxTemperature;
	uint32<"Uint32", 59, -1, "", 1000, 1, "s", "", "", "", "", "", "", "1"> @TotalMovingTime;
	int16<"Sint16", 60, -1, "", 1000, 1, "m/s", "", "", "", "", "", "", "1"> @AvgPosVerticalSpeed;
	int16<"Sint16", 61, -1, "", 1000, 1, "m/s", "", "", "", "", "", "", "1"> @AvgNegVerticalSpeed;
	int16<"Sint16", 62, -1, "", 1000, 1, "m/s", "", "", "", "", "", "", "1"> @MaxPosVerticalSpeed;
	int16<"Sint16", 63, -1, "", 1000, 1, "m/s", "", "", "", "", "", "", "1"> @MaxNegVerticalSpeed;
	uint8<"Uint8", 64, -1, "", 1, 1, "bpm", "", "", "", "", "", "", "1"> @MinHeartRate;
	uint32<"Uint32", 65, 0, "", 1000, 1, "s", "", "", "", "", "", "", "1"> @TimeInHrZone;
	uint32<"Uint32", 66, 0, "", 1000, 1, "s", "", "", "", "", "", "", "1"> @TimeInSpeedZone;
	uint32<"Uint32", 67, 0, "", 1000, 1, "s", "", "", "", "", "", "", "1"> @TimeInCadenceZone;
	uint32<"Uint32", 68, 0, "", 1000, 1, "s", "", "", "", "", "", "", "1"> @TimeInPowerZone;
	uint32<"Uint32", 69, -1, "", 1000, 1, "s", "", "", "", "", "", "", "1"> @AvgLapTime;
	uint16<"Uint16", 70, -1, "", 1, 1, "", "", "", "", "", "", "", "1"> @BestLapIndex;
	uint16<"Uint16", 71, -1, "enhanced_min_altitude", 5, 500, "m", "16", "", "", "", "", "", "1"> @MinAltitude;
	uint16<"Uint16", 82, -1, "", 1, 1, "", "", "", "", "", "", "", "1"> @PlayerScore;
	uint16<"Uint16", 83, -1, "", 1, 1, "", "", "", "", "", "", "", "1"> @OpponentScore;
	string<"String", 84, -1, "", 1, 1, "", "", "", "", "", "", "", "1"> @OpponentName;
	uint16<"Uint16", 85, 0, "", 1, 1, "counts", "", "", "", "", "stroke_type enum used as the index", "", "1"> @StrokeCount;
	uint16<"Uint16", 86, 0, "", 1, 1, "counts", "", "", "", "", "zone number used as the index", "", "1"> @ZoneCount;
	uint16<"Uint16", 87, -1, "", 100, 1, "m/s", "", "", "", "", "", "", "1"> @MaxBallSpeed;
	uint16<"Uint16", 88, -1, "", 100, 1, "m/s", "", "", "", "", "", "", "1"> @AvgBallSpeed;
	uint16<"Uint16", 89, -1, "", 10, 1, "mm", "", "", "", "", "", "", "1"> @AvgVerticalOscillation;
	uint16<"Uint16", 90, -1, "", 100, 1, "percent", "", "", "", "", "", "", "1"> @AvgStanceTimePercent;
	uint16<"Uint16", 91, -1, "", 10, 1, "ms", "", "", "", "", "", "", "1"> @AvgStanceTime;
	uint8<"Uint8", 92, -1, "", 128, 1, "rpm", "", "", "", "", "fractional part of the avg_cadence", "", "1"> @AvgFractionalCadence;
	uint8<"Uint8", 93, -1, "", 128, 1, "rpm", "", "", "", "", "fractional part of the max_cadence", "", "1"> @MaxFractionalCadence;
	uint8<"Uint8", 94, -1, "", 128, 1, "cycles", "", "", "", "", "fractional part of the total_cycles", "", "1"> @TotalFractionalCycles;
	uint16<"Uint16", 95, 0, "", 100, 1, "g/dL", "", "", "", "", "Avg saturated and unsaturated hemoglobin", "", ""> @AvgTotalHemoglobinConc;
	uint16<"Uint16", 96, 0, "", 100, 1, "g/dL", "", "", "", "", "Min saturated and unsaturated hemoglobin", "", ""> @MinTotalHemoglobinConc;
	uint16<"Uint16", 97, 0, "", 100, 1, "g/dL", "", "", "", "", "Max saturated and unsaturated hemoglobin", "", ""> @MaxTotalHemoglobinConc;
	uint16<"Uint16", 98, 0, "", 10, 1, "%", "", "", "", "", "Avg percentage of hemoglobin saturated with oxygen", "", ""> @AvgSaturatedHemoglobinPercent;
	uint16<"Uint16", 99, 0, "", 10, 1, "%", "", "", "", "", "Min percentage of hemoglobin saturated with oxygen", "", ""> @MinSaturatedHemoglobinPercent;
	uint16<"Uint16", 100, 0, "", 10, 1, "%", "", "", "", "", "Max percentage of hemoglobin saturated with oxygen", "", ""> @MaxSaturatedHemoglobinPercent;
	uint8<"Uint8", 101, -1, "", 2, 1, "percent", "", "", "", "", "", "", ""> @AvgLeftTorqueEffectiveness;
	uint8<"Uint8", 102, -1, "", 2, 1, "percent", "", "", "", "", "", "", ""> @AvgRightTorqueEffectiveness;
	uint8<"Uint8", 103, -1, "", 2, 1, "percent", "", "", "", "", "", "", ""> @AvgLeftPedalSmoothness;
	uint8<"Uint8", 104, -1, "", 2, 1, "percent", "", "", "", "", "", "", ""> @AvgRightPedalSmoothness;
	uint8<"Uint8", 105, -1, "", 2, 1, "percent", "", "", "", "", "", "", ""> @AvgCombinedPedalSmoothness;
	string<"String", 110, -1, "", 1, 1, "", "", "", "", "", "Sport name from associated sport mesg", "", "16"> @SportProfileName;
	uint8<"Uint8", 111, -1, "", 1, 1, "", "", "", "", "", "", "", "1"> @SportIndex;
	uint32<"Uint32", 112, -1, "", 1000, 1, "s", "", "", "", "", "Total time spend in the standing position", "", ""> @TimeStanding;
	uint16<"Uint16", 113, -1, "", 1, 1, "", "", "", "", "", "Number of transitions to the standing state", "", ""> @StandCount;
	int8<"Sint8", 114, -1, "", 1, 1, "mm", "", "", "", "", "Average platform center offset Left", "", ""> @AvgLeftPco;
	int8<"Sint8", 115, -1, "", 1, 1, "mm", "", "", "", "", "Average platform center offset Right", "", ""> @AvgRightPco;
	uint8<"Uint8", 116, 0, "", 0.7111111, 1, "degrees", "", "", "", "", "Average left power phase angles. Indexes defined by power_phase_type.", "", ""> @AvgLeftPowerPhase;
	uint8<"Uint8", 117, 0, "", 0.7111111, 1, "degrees", "", "", "", "", "Average left power phase peak angles. Data value indexes defined by power_phase_type.", "", ""> @AvgLeftPowerPhasePeak;
	uint8<"Uint8", 118, 0, "", 0.7111111, 1, "degrees", "", "", "", "", "Average right power phase angles. Data value indexes defined by power_phase_type.", "", ""> @AvgRightPowerPhase;
	uint8<"Uint8", 119, 0, "", 0.7111111, 1, "degrees", "", "", "", "", "Average right power phase peak angles data value indexes defined by power_phase_type.", "", ""> @AvgRightPowerPhasePeak;
	uint16<"Uint16", 120, 0, "", 1, 1, "watts", "", "", "", "", "Average power by position. Data value indexes defined by rider_position_type.", "", ""> @AvgPowerPosition;
	uint16<"Uint16", 121, 0, "", 1, 1, "watts", "", "", "", "", "Maximum power by position. Data value indexes defined by rider_position_type.", "", ""> @MaxPowerPosition;
	uint8<"Uint8", 122, 0, "", 1, 1, "rpm", "", "", "", "", "Average cadence by position. Data value indexes defined by rider_position_type.", "", ""> @AvgCadencePosition;
	uint8<"Uint8", 123, 0, "", 1, 1, "rpm", "", "", "", "", "Maximum cadence by position. Data value indexes defined by rider_position_type.", "", ""> @MaxCadencePosition;
	uint32<"Uint32", 124, -1, "", 1000, 1, "m/s", "", "", "", "", "total_distance / total_timer_time", "", "1"> @EnhancedAvgSpeed;
	uint32<"Uint32", 125, -1, "", 1000, 1, "m/s", "", "", "", "", "", "", "1"> @EnhancedMaxSpeed;
	uint32<"Uint32", 126, -1, "", 5, 500, "m", "", "", "", "", "", "", "1"> @EnhancedAvgAltitude;
	uint32<"Uint32", 127, -1, "", 5, 500, "m", "", "", "", "", "", "", "1"> @EnhancedMinAltitude;
	uint32<"Uint32", 128, -1, "", 5, 500, "m", "", "", "", "", "", "", "1"> @EnhancedMaxAltitude;
	uint16<"Uint16", 129, -1, "", 1, 1, "watts", "", "", "", "", "lev average motor power during session", "", ""> @AvgLevMotorPower;
	uint16<"Uint16", 130, -1, "", 1, 1, "watts", "", "", "", "", "lev maximum motor power during session", "", ""> @MaxLevMotorPower;
	uint8<"Uint8", 131, -1, "", 2, 1, "percent", "", "", "", "", "lev battery consumption during session", "", ""> @LevBatteryConsumption;
	uint16<"Uint16", 132, -1, "", 100, 1, "percent", "", "", "", "", "", "", ""> @AvgVerticalRatio;
	uint16<"Uint16", 133, -1, "", 100, 1, "percent", "", "", "", "", "", "", ""> @AvgStanceTimeBalance;
	uint16<"Uint16", 134, -1, "", 10, 1, "mm", "", "", "", "", "", "", ""> @AvgStepLength;
	uint8<"Uint8", 137, -1, "", 10, 1, "", "", "", "", "", "", "", "1"> @TotalAnaerobicTrainingEffect;
	uint16<"Uint16", 139, -1, "", 1000, 1, "m/s", "16", "", "", "", "", "", "1"> @AvgVam;
	uint32<"Uint32", 140, -1, "", 1000, 1, "m", "", "", "", "", "0 if above water", "", ""> @AvgDepth;
	uint32<"Uint32", 141, -1, "", 1000, 1, "m", "", "", "", "", "0 if above water", "", ""> @MaxDepth;
	uint32<"Uint32", 142, -1, "", 1, 1, "s", "", "", "", "", "Time since end of last dive", "", ""> @SurfaceInterval;
	uint8<"Uint8", 143, -1, "", 1, 1, "percent", "", "", "", "", "", "", ""> @StartCns;
	uint8<"Uint8", 144, -1, "", 1, 1, "percent", "", "", "", "", "", "", ""> @EndCns;
	uint16<"Uint16", 145, -1, "", 1, 1, "percent", "", "", "", "", "", "", ""> @StartN2;
	uint16<"Uint16", 146, -1, "", 1, 1, "percent", "", "", "", "", "", "", ""> @EndN2;
	uint8<"Uint8", 147, -1, "enhanced_avg_respiration_rate", 1, 1, "", "8", "", "", "", "", "", ""> @AvgRespirationRate;
	uint8<"Uint8", 148, -1, "enhanced_max_respiration_rate", 1, 1, "", "8", "", "", "", "", "", ""> @MaxRespirationRate;
	uint8<"Uint8", 149, -1, "enhanced_min_respiration_rate", 1, 1, "", "8", "", "", "", "", "", ""> @MinRespirationRate;
	int8<"Sint8", 150, -1, "", 1, 1, "C", "", "", "", "", "", "", "1"> @MinTemperature;
	uint16<"Uint16", 155, -1, "", 1, 1, "OTUs", "", "", "", "", "", "", ""> @O2Toxicity;
	uint32<"Uint32", 156, -1, "", 1, 1, "", "", "", "", "", "", "", ""> @DiveNumber;
	int32<"Sint32", 168, -1, "", 65536, 1, "", "", "", "", "", "", "", ""> @TrainingLoadPeak;
	uint16<"Uint16", 169, -1, "", 100, 1, "Breaths/min", "", "", "", "", "", "", ""> @EnhancedAvgRespirationRate;
	uint16<"Uint16", 170, -1, "", 100, 1, "Breaths/min", "", "", "", "", "", "", ""> @EnhancedMaxRespirationRate;
	uint16<"Uint16", 180, -1, "", 100, 1, "", "", "", "", "", "", "", ""> @EnhancedMinRespirationRate;
	float32<"Float32", 181, -1, "", 1, 1, "kGrit", "", "", "", "", "The grit score estimates how challenging a route could be for a cyclist in terms of time spent going over sharp turns or large grade slopes.", "", ""> @TotalGrit;
	float32<"Float32", 182, -1, "", 1, 1, "Flow", "", "", "", "", "The flow score estimates how long distance wise a cyclist deaccelerates over intervals where deacceleration is unnecessary such as smooth turns or small grade angle intervals.", "", ""> @TotalFlow;
	uint16<"Uint16", 183, -1, "", 1, 1, "", "", "", "", "", "", "", ""> @JumpCount;
	float32<"Float32", 186, -1, "", 1, 1, "kGrit", "", "", "", "", "The grit score estimates how challenging a route could be for a cyclist in terms of time spent going over sharp turns or large grade slopes.", "", ""> @AvgGrit;
	float32<"Float32", 187, -1, "", 1, 1, "Flow", "", "", "", "", "The flow score estimates how long distance wise a cyclist deaccelerates over intervals where deacceleration is unnecessary such as smooth turns or small grade angle intervals.", "", ""> @AvgFlow;
	uint8<"Uint8", 192, -1, "", 1, 1, "", "", "", "", "", "A 0-100 scale representing how a user felt while performing a workout. Low values are considered feeling bad, while high values are good.", "", ""> @WorkoutFeel;
	uint8<"Uint8", 193, -1, "", 1, 1, "", "", "", "", "", "Common Borg CR10 / 0-10 RPE scale, multiplied 10x.. Aggregate score for all workouts in a single session.", "", ""> @WorkoutRpe;
	uint8<"Uint8", 194, -1, "", 1, 1, "percent", "", "", "", "", "Average SPO2 for the monitoring session", "", ""> @AvgSpo2;
	uint8<"Uint8", 195, -1, "", 1, 1, "percent", "", "", "", "", "Average stress for the monitoring session", "", ""> @AvgStress;
	uint8<"Uint8", 197, -1, "", 1, 1, "mS", "", "", "", "", "Standard deviation of R-R interval (SDRR) - Heart rate variability measure most useful for wellness users.", "", ""> @SdrrHrv;
	uint8<"Uint8", 198, -1, "", 1, 1, "mS", "", "", "", "", "Root mean square successive difference (RMSSD) - Heart rate variability measure most useful for athletes", "", ""> @RmssdHrv;
	uint8<"Uint8", 199, -1, "", 100, 1, "m", "", "", "", "", "fractional part of total_ascent", "", ""> @TotalFractionalAscent;
	uint8<"Uint8", 200, -1, "", 100, 1, "m", "", "", "", "", "fractional part of total_descent", "", ""> @TotalFractionalDescent;
	uint16<"Uint16", 208, -1, "", 100, 1, "C", "", "", "", "", "", "", ""> @AvgCoreTemperature;
	uint16<"Uint16", 209, -1, "", 100, 1, "C", "", "", "", "", "", "", ""> @MinCoreTemperature;
	uint16<"Uint16", 210, -1, "", 100, 1, "C", "", "", "", "", "", "", ""> @MaxCoreTemperature;
};
