// Code generated by golex. DO NOT EDIT.

// Copyright (c) 2011 CZ.NIC z.s.p.o. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

// blame: jnml, labs.nic.cz

package main

import (
	"bufio"
	"log"
	"strconv"
)

type yylexer struct {
	src     *bufio.Reader
	buf     []byte
	empty   bool
	current byte
}

func newLexer(src *bufio.Reader) (y *yylexer) {
	y = &yylexer{src: src}
	if b, err := src.ReadByte(); err == nil {
		y.current = b
	}
	return
}

func (y *yylexer) getc() byte {
	if y.current != 0 {
		y.buf = append(y.buf, y.current)
	}
	y.current = 0
	if b, err := y.src.ReadByte(); err == nil {
		y.current = b
	}
	return y.current
}

func (y yylexer) Error(e string) {
	log.Fatal(e)
}

func (y *yylexer) Lex(lval *yySymType) int {
	var err error
	c := y.current
	if y.empty {
		c, y.empty = y.getc(), false
	}

yystate0:

	y.buf = y.buf[:0]

	goto yystart1

yystate1:
	c = y.getc()
yystart1:
	switch {
	default:
		goto yyabort
	case c == '.':
		goto yystate3
	case c == '\t' || c == '\r' || c == ' ':
		goto yystate2
	case c == 'b':
		goto yystate9
	case c == 'c':
		goto yystate14
	case c == 'd':
		goto yystate30
	case c == 'e':
		goto yystate39
	case c == 'f':
		goto yystate43
	case c == 'g':
		goto yystate59
	case c == 'i':
		goto yystate63
	case c == 'm':
		goto yystate78
	case c == 'p':
		goto yystate81
	case c == 'r':
		goto yystate88
	case c == 's':
		goto yystate98
	case c == 't':
		goto yystate114
	case c == 'v':
		goto yystate118
	case c >= '0' && c <= '9':
		goto yystate8
	}

yystate2:
	c = y.getc()
	switch {
	default:
		goto yyrule1
	case c == '\t' || c == '\r' || c == ' ':
		goto yystate2
	}

yystate3:
	c = y.getc()
	switch {
	default:
		goto yyabort
	case c >= '0' && c <= '9':
		goto yystate4
	}

yystate4:
	c = y.getc()
	switch {
	default:
		goto yyrule27
	case c == 'E' || c == 'e':
		goto yystate5
	case c >= '0' && c <= '9':
		goto yystate4
	}

yystate5:
	c = y.getc()
	switch {
	default:
		goto yyabort
	case c == '+' || c == '-':
		goto yystate6
	case c >= '0' && c <= '9':
		goto yystate7
	}

yystate6:
	c = y.getc()
	switch {
	default:
		goto yyabort
	case c >= '0' && c <= '9':
		goto yystate7
	}

yystate7:
	c = y.getc()
	switch {
	default:
		goto yyrule27
	case c >= '0' && c <= '9':
		goto yystate7
	}

yystate8:
	c = y.getc()
	switch {
	default:
		goto yyrule27
	case c == '.':
		goto yystate4
	case c == 'E' || c == 'e':
		goto yystate5
	case c >= '0' && c <= '9':
		goto yystate8
	}

yystate9:
	c = y.getc()
	switch {
	default:
		goto yyabort
	case c == 'r':
		goto yystate10
	}

yystate10:
	c = y.getc()
	switch {
	default:
		goto yyabort
	case c == 'e':
		goto yystate11
	}

yystate11:
	c = y.getc()
	switch {
	default:
		goto yyabort
	case c == 'a':
		goto yystate12
	}

yystate12:
	c = y.getc()
	switch {
	default:
		goto yyabort
	case c == 'k':
		goto yystate13
	}

yystate13:
	c = y.getc()
	goto yyrule2

yystate14:
	c = y.getc()
	switch {
	default:
		goto yyabort
	case c == 'a':
		goto yystate15
	case c == 'h':
		goto yystate18
	case c == 'o':
		goto yystate21
	}

yystate15:
	c = y.getc()
	switch {
	default:
		goto yyabort
	case c == 's':
		goto yystate16
	}

yystate16:
	c = y.getc()
	switch {
	default:
		goto yyabort
	case c == 'e':
		goto yystate17
	}

yystate17:
	c = y.getc()
	goto yyrule7

yystate18:
	c = y.getc()
	switch {
	default:
		goto yyabort
	case c == 'a':
		goto yystate19
	}

yystate19:
	c = y.getc()
	switch {
	default:
		goto yyabort
	case c == 'n':
		goto yystate20
	}

yystate20:
	c = y.getc()
	goto yyrule12

yystate21:
	c = y.getc()
	switch {
	default:
		goto yyabort
	case c == 'n':
		goto yystate22
	}

yystate22:
	c = y.getc()
	switch {
	default:
		goto yyabort
	case c == 's':
		goto yystate23
	case c == 't':
		goto yystate25
	}

yystate23:
	c = y.getc()
	switch {
	default:
		goto yyabort
	case c == 't':
		goto yystate24
	}

yystate24:
	c = y.getc()
	goto yyrule17

yystate25:
	c = y.getc()
	switch {
	default:
		goto yyabort
	case c == 'i':
		goto yystate26
	}

yystate26:
	c = y.getc()
	switch {
	default:
		goto yyabort
	case c == 'n':
		goto yystate27
	}

yystate27:
	c = y.getc()
	switch {
	default:
		goto yyabort
	case c == 'u':
		goto yystate28
	}

yystate28:
	c = y.getc()
	switch {
	default:
		goto yyabort
	case c == 'e':
		goto yystate29
	}

yystate29:
	c = y.getc()
	goto yyrule22

yystate30:
	c = y.getc()
	switch {
	default:
		goto yyabort
	case c == 'e':
		goto yystate31
	}

yystate31:
	c = y.getc()
	switch {
	default:
		goto yyabort
	case c == 'f':
		goto yystate32
	}

yystate32:
	c = y.getc()
	switch {
	default:
		goto yyabort
	case c == 'a':
		goto yystate33
	case c == 'e':
		goto yystate37
	}

yystate33:
	c = y.getc()
	switch {
	default:
		goto yyabort
	case c == 'u':
		goto yystate34
	}

yystate34:
	c = y.getc()
	switch {
	default:
		goto yyabort
	case c == 'l':
		goto yystate35
	}

yystate35:
	c = y.getc()
	switch {
	default:
		goto yyabort
	case c == 't':
		goto yystate36
	}

yystate36:
	c = y.getc()
	goto yyrule3

yystate37:
	c = y.getc()
	switch {
	default:
		goto yyabort
	case c == 'r':
		goto yystate38
	}

yystate38:
	c = y.getc()
	goto yyrule8

yystate39:
	c = y.getc()
	switch {
	default:
		goto yyabort
	case c == 'l':
		goto yystate40
	}

yystate40:
	c = y.getc()
	switch {
	default:
		goto yyabort
	case c == 's':
		goto yystate41
	}

yystate41:
	c = y.getc()
	switch {
	default:
		goto yyabort
	case c == 'e':
		goto yystate42
	}

yystate42:
	c = y.getc()
	goto yyrule13

yystate43:
	c = y.getc()
	switch {
	default:
		goto yyabort
	case c == 'a':
		goto yystate44
	case c == 'o':
		goto yystate54
	case c == 'u':
		goto yystate56
	}

yystate44:
	c = y.getc()
	switch {
	default:
		goto yyabort
	case c == 'l':
		goto yystate45
	}

yystate45:
	c = y.getc()
	switch {
	default:
		goto yyabort
	case c == 'l':
		goto yystate46
	}

yystate46:
	c = y.getc()
	switch {
	default:
		goto yyabort
	case c == 't':
		goto yystate47
	}

yystate47:
	c = y.getc()
	switch {
	default:
		goto yyabort
	case c == 'h':
		goto yystate48
	}

yystate48:
	c = y.getc()
	switch {
	default:
		goto yyabort
	case c == 'r':
		goto yystate49
	}

yystate49:
	c = y.getc()
	switch {
	default:
		goto yyabort
	case c == 'o':
		goto yystate50
	}

yystate50:
	c = y.getc()
	switch {
	default:
		goto yyabort
	case c == 'u':
		goto yystate51
	}

yystate51:
	c = y.getc()
	switch {
	default:
		goto yyabort
	case c == 'g':
		goto yystate52
	}

yystate52:
	c = y.getc()
	switch {
	default:
		goto yyabort
	case c == 'h':
		goto yystate53
	}

yystate53:
	c = y.getc()
	goto yyrule18

yystate54:
	c = y.getc()
	switch {
	default:
		goto yyabort
	case c == 'r':
		goto yystate55
	}

yystate55:
	c = y.getc()
	goto yyrule23

yystate56:
	c = y.getc()
	switch {
	default:
		goto yyabort
	case c == 'n':
		goto yystate57
	}

yystate57:
	c = y.getc()
	switch {
	default:
		goto yyabort
	case c == 'c':
		goto yystate58
	}

yystate58:
	c = y.getc()
	goto yyrule4

yystate59:
	c = y.getc()
	switch {
	default:
		goto yyabort
	case c == 'o':
		goto yystate60
	}

yystate60:
	c = y.getc()
	switch {
	default:
		goto yyrule9
	case c == 't':
		goto yystate61
	}

yystate61:
	c = y.getc()
	switch {
	default:
		goto yyabort
	case c == 'o':
		goto yystate62
	}

yystate62:
	c = y.getc()
	goto yyrule14

yystate63:
	c = y.getc()
	switch {
	default:
		goto yyabort
	case c == 'f':
		goto yystate64
	case c == 'm':
		goto yystate65
	case c == 'n':
		goto yystate70
	}

yystate64:
	c = y.getc()
	goto yyrule19

yystate65:
	c = y.getc()
	switch {
	default:
		goto yyabort
	case c == 'p':
		goto yystate66
	}

yystate66:
	c = y.getc()
	switch {
	default:
		goto yyabort
	case c == 'o':
		goto yystate67
	}

yystate67:
	c = y.getc()
	switch {
	default:
		goto yyabort
	case c == 'r':
		goto yystate68
	}

yystate68:
	c = y.getc()
	switch {
	default:
		goto yyabort
	case c == 't':
		goto yystate69
	}

yystate69:
	c = y.getc()
	goto yyrule24

yystate70:
	c = y.getc()
	switch {
	default:
		goto yyabort
	case c == 't':
		goto yystate71
	}

yystate71:
	c = y.getc()
	switch {
	default:
		goto yyabort
	case c == 'e':
		goto yystate72
	}

yystate72:
	c = y.getc()
	switch {
	default:
		goto yyabort
	case c == 'r':
		goto yystate73
	}

yystate73:
	c = y.getc()
	switch {
	default:
		goto yyabort
	case c == 'f':
		goto yystate74
	}

yystate74:
	c = y.getc()
	switch {
	default:
		goto yyabort
	case c == 'a':
		goto yystate75
	}

yystate75:
	c = y.getc()
	switch {
	default:
		goto yyabort
	case c == 'c':
		goto yystate76
	}

yystate76:
	c = y.getc()
	switch {
	default:
		goto yyabort
	case c == 'e':
		goto yystate77
	}

yystate77:
	c = y.getc()
	goto yyrule5

yystate78:
	c = y.getc()
	switch {
	default:
		goto yyabort
	case c == 'a':
		goto yystate79
	}

yystate79:
	c = y.getc()
	switch {
	default:
		goto yyabort
	case c == 'p':
		goto yystate80
	}

yystate80:
	c = y.getc()
	goto yyrule10

yystate81:
	c = y.getc()
	switch {
	default:
		goto yyabort
	case c == 'a':
		goto yystate82
	}

yystate82:
	c = y.getc()
	switch {
	default:
		goto yyabort
	case c == 'c':
		goto yystate83
	}

yystate83:
	c = y.getc()
	switch {
	default:
		goto yyabort
	case c == 'k':
		goto yystate84
	}

yystate84:
	c = y.getc()
	switch {
	default:
		goto yyabort
	case c == 'a':
		goto yystate85
	}

yystate85:
	c = y.getc()
	switch {
	default:
		goto yyabort
	case c == 'g':
		goto yystate86
	}

yystate86:
	c = y.getc()
	switch {
	default:
		goto yyabort
	case c == 'e':
		goto yystate87
	}

yystate87:
	c = y.getc()
	goto yyrule15

yystate88:
	c = y.getc()
	switch {
	default:
		goto yyabort
	case c == 'a':
		goto yystate89
	case c == 'e':
		goto yystate93
	}

yystate89:
	c = y.getc()
	switch {
	default:
		goto yyabort
	case c == 'n':
		goto yystate90
	}

yystate90:
	c = y.getc()
	switch {
	default:
		goto yyabort
	case c == 'g':
		goto yystate91
	}

yystate91:
	c = y.getc()
	switch {
	default:
		goto yyabort
	case c == 'e':
		goto yystate92
	}

yystate92:
	c = y.getc()
	goto yyrule20

yystate93:
	c = y.getc()
	switch {
	default:
		goto yyabort
	case c == 't':
		goto yystate94
	}

yystate94:
	c = y.getc()
	switch {
	default:
		goto yyabort
	case c == 'u':
		goto yystate95
	}

yystate95:
	c = y.getc()
	switch {
	default:
		goto yyabort
	case c == 'r':
		goto yystate96
	}

yystate96:
	c = y.getc()
	switch {
	default:
		goto yyabort
	case c == 'n':
		goto yystate97
	}

yystate97:
	c = y.getc()
	goto yyrule25

yystate98:
	c = y.getc()
	switch {
	default:
		goto yyabort
	case c == 'e':
		goto yystate99
	case c == 't':
		goto yystate104
	case c == 'w':
		goto yystate109
	}

yystate99:
	c = y.getc()
	switch {
	default:
		goto yyabort
	case c == 'l':
		goto yystate100
	}

yystate100:
	c = y.getc()
	switch {
	default:
		goto yyabort
	case c == 'e':
		goto yystate101
	}

yystate101:
	c = y.getc()
	switch {
	default:
		goto yyabort
	case c == 'c':
		goto yystate102
	}

yystate102:
	c = y.getc()
	switch {
	default:
		goto yyabort
	case c == 't':
		goto yystate103
	}

yystate103:
	c = y.getc()
	goto yyrule6

yystate104:
	c = y.getc()
	switch {
	default:
		goto yyabort
	case c == 'r':
		goto yystate105
	}

yystate105:
	c = y.getc()
	switch {
	default:
		goto yyabort
	case c == 'u':
		goto yystate106
	}

yystate106:
	c = y.getc()
	switch {
	default:
		goto yyabort
	case c == 'c':
		goto yystate107
	}

yystate107:
	c = y.getc()
	switch {
	default:
		goto yyabort
	case c == 't':
		goto yystate108
	}

yystate108:
	c = y.getc()
	goto yyrule11

yystate109:
	c = y.getc()
	switch {
	default:
		goto yyabort
	case c == 'i':
		goto yystate110
	}

yystate110:
	c = y.getc()
	switch {
	default:
		goto yyabort
	case c == 't':
		goto yystate111
	}

yystate111:
	c = y.getc()
	switch {
	default:
		goto yyabort
	case c == 'c':
		goto yystate112
	}

yystate112:
	c = y.getc()
	switch {
	default:
		goto yyabort
	case c == 'h':
		goto yystate113
	}

yystate113:
	c = y.getc()
	goto yyrule16

yystate114:
	c = y.getc()
	switch {
	default:
		goto yyabort
	case c == 'y':
		goto yystate115
	}

yystate115:
	c = y.getc()
	switch {
	default:
		goto yyabort
	case c == 'p':
		goto yystate116
	}

yystate116:
	c = y.getc()
	switch {
	default:
		goto yyabort
	case c == 'e':
		goto yystate117
	}

yystate117:
	c = y.getc()
	goto yyrule21

yystate118:
	c = y.getc()
	switch {
	default:
		goto yyabort
	case c == 'a':
		goto yystate119
	}

yystate119:
	c = y.getc()
	switch {
	default:
		goto yyabort
	case c == 'r':
		goto yystate120
	}

yystate120:
	c = y.getc()
	goto yyrule26

yyrule1: // [ \t\r]+

	goto yystate0
yyrule2: // break
	{
		{
			return BREAK
		}
		goto yystate0
	}
yyrule3: // default
	{
		{
			return DEFAULT
		}
		goto yystate0
	}
yyrule4: // func
	{
		{
			return FUNC
		}
		goto yystate0
	}
yyrule5: // interface
	{
		{
			return INTERFACE
		}
		goto yystate0
	}
yyrule6: // select
	{
		{
			return SELECT
		}
		goto yystate0
	}
yyrule7: // case
	{
		{
			return CASE
		}
		goto yystate0
	}
yyrule8: // defer
	{
		{
			return DEFER
		}
		goto yystate0
	}
yyrule9: // go
	{
		{
			return GO
		}
		goto yystate0
	}
yyrule10: // map
	{
		{
			return MAP
		}
		goto yystate0
	}
yyrule11: // struct
	{
		{
			return STRUCT
		}
		goto yystate0
	}
yyrule12: // chan
	{
		{
			return CHAN
		}
		goto yystate0
	}
yyrule13: // else
	{
		{
			return ELSE
		}
		goto yystate0
	}
yyrule14: // goto
	{
		{
			return GOTO
		}
		goto yystate0
	}
yyrule15: // package
	{
		{
			return PACKAGE
		}
		goto yystate0
	}
yyrule16: // switch
	{
		{
			return SWITCH
		}
		goto yystate0
	}
yyrule17: // const
	{
		{
			return CONST
		}
		goto yystate0
	}
yyrule18: // fallthrough
	{
		{
			return FALLTHROUGH
		}
		goto yystate0
	}
yyrule19: // if
	{
		{
			return IF
		}
		goto yystate0
	}
yyrule20: // range
	{
		{
			return RANGE
		}
		goto yystate0
	}
yyrule21: // type
	{
		{
			return TYPE
		}
		goto yystate0
	}
yyrule22: // continue
	{
		{
			return CONTINUE
		}
		goto yystate0
	}
yyrule23: // for
	{
		{
			return FOR
		}
		goto yystate0
	}
yyrule24: // import
	{
		{
			return IMPORT
		}
		goto yystate0
	}
yyrule25: // return
	{
		{
			return RETURN
		}
		goto yystate0
	}
yyrule26: // var
	{
		{
			return VAR
		}
		goto yystate0
	}
yyrule27: // {F}
	if true { // avoid go vet determining the below panic will not be reached

		if lval.value, err = strconv.ParseFloat(string(y.buf), 64); err != nil {
			log.Fatal(err)
		}
		return NUM
	}
	panic("unreachable")

yyabort: // no lexem recognized
	// silence unused label errors for build and satisfy go vet reachability analysis
	{
		if false {
			goto yyabort
		}
		if false {
			goto yystate0
		}
		if false {
			goto yystate1
		}
	}

	y.empty = true
	return int(c)
}
